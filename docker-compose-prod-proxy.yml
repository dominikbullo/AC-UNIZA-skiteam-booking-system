version: '3.3'

volumes:
    postgres_data: {}


services:
  backend:
    build:
      context: ./backend
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    command: /gunicorn.sh
    entrypoint: /entrypoint.sh
    restart: on-failure
    env_file: .env

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    expose:
      - 80
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/prod.conf:/etc/nginx/nginx.conf:ro
    environment:
      VIRTUAL_HOST: ${DOMAIN}
      LETSENCRYPT_HOST: ${DOMAIN}
      LETSENCRYPT_EMAIL: ${ADMIN_EMAIL}


  backups:
    image: prodrigestivill/postgres-backup-local
    restart: on-failure
    depends_on:
      - postgres
    volumes:
      - /tmp/backups/:/backups/

  watchtower:
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command: --interval 30

